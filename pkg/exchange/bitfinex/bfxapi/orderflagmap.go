// Code generated by go:generate; DO NOT EDIT.
package bfxapi

import "fmt"

var AllOrderFlags = map[OrderFlag]struct{}{
	OrderFlagHidden:     {},
	OrderFlagClose:      {},
	OrderFlagReduceOnly: {},
	OrderFlagPostOnly:   {},
	OrderFlagOCO:        {},
	OrderFlagNoVarRate:  {},
}

var AllOrderFlagsSlice = []OrderFlag{
	OrderFlagHidden,
	OrderFlagClose,
	OrderFlagReduceOnly,
	OrderFlagPostOnly,
	OrderFlagOCO,
	OrderFlagNoVarRate,
}

func OrderFlagStrings(slice []OrderFlag) (out []string) {
	for _, el := range slice {
		out = append(out, fmt.Sprintf("%d", el))
	}
	return out
}

// OrderFlagKeys converts a map of OrderFlag to a slice of OrderFlag
func OrderFlagKeys(values map[OrderFlag]struct{}) (slice []OrderFlag) {
	for k := range values {
		slice = append(slice, k)
	}
	return slice
}

// ValidateOrderFlag validates a value of type OrderFlag
func ValidateOrderFlag(ch OrderFlag) bool {
	_, ok := AllOrderFlags[ch]
	return ok
}
